{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/userReducer.js","pages/LoginPage/LoginPage.js","redux/reducers/postReducer.js","pages/HomePage/HomePage.js","component/Header/Header.js","pages/ArticlePage/ArticlePage.js","pages/RegisterPage/RegisterPage.js","pages/NewPostPage/NewPostPage.js","pages/EditPostPage/EditPostPage.js","pages/AboutPage/AboutPage.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPosts","page","fetch","then","res","articleAmout","headers","get","json","amount","getMe","authorization","userReducer","createSlice","name","initialState","user","errorMessage","reducers","setUser","state","action","payload","setErrorMessage","actions","login","username","password","history","dispatch","method","body","JSON","stringify","loginAPI","data","ok","message","getAPIMe","response","toString","push","register","nickname","registerAPI","ErrorMessage","styled","div","Container","LoginPage","useState","setUsername","setPassword","useSelector","store","useHistory","useDispatch","useEffect","onSubmit","value","onChange","e","target","type","postReducer","isLoadingPost","post","newPostResponse","posts","setIsLoadingPost","setPost","setNewPostResponse","setPosts","setAmount","setAuth","getPost","id","getArticle","console","log","newPost","createPost","catch","err","getAPIPosts","deletePost","deleteArticle","editPost","editArticle","Root","PostContainer","PostTitle","Link","PostDate","Page","props","$active","PageContainer","PostDelete","PostRightContainer","Post","handleDelete","handleEdit","to","title","Date","createdAt","toLocaleString","onClick","HomePage","pagination","setPage","currentPage","setCurrentPage","arr","i","Math","ceil","map","innerText","handlePage","HeaderContainer","Brand","NavbarList","Nav","LeftContainer","Header","location","useLocation","pathname","ArticlePage","useParams","RegisterPage","setNickname","NewPostPage","setTitle","article","setArticle","EditPostPage","RightContainer","AboutPage","App","exact","path","Boolean","window","hostname","match","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c0dcbe6.chunk.js","sourcesContent":["const TOKEN_NAME = 'token'\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token)\r\n}\r\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME)\r\n","import { getAuthToken } from './utils'\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\nexport const getPosts = (page = 1) => fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc&_limit=5&_page=${page}`)\r\n  .then((res) => {\r\n    const articleAmout = res.headers.get('x-total-count')\r\n    return {\r\n      res: res.json(),\r\n      amount: articleAmout\r\n    }\r\n  })\r\nexport const login = (username, password) => fetch(`${BASE_URL}/login`, {\r\n  method: 'POST',\r\n  headers: {\r\n    'content-type': 'application/json'\r\n  },\r\n  body: JSON.stringify({\r\n    username,\r\n    password\r\n  })\r\n}).then((res) => res.json())\r\n\r\nexport const getMe = () => {\r\n  const token = getAuthToken()\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then((res) => res.json())\r\n}\r\nexport const getArticle = (id) => fetch(`${BASE_URL}/posts?id=${id}`, {\r\n})\r\n  .then((res) => res.json())\r\nexport const register = (username, password, nickname) => fetch(`${BASE_URL}/register`, {\r\n  method: 'POST',\r\n  headers: {\r\n    'content-type': 'application/json'\r\n  },\r\n  body: JSON.stringify({\r\n    username,\r\n    password,\r\n    nickname\r\n  })\r\n}).then((res) => res.json())\r\nexport const createPost = (payload) => {\r\n  const token = getAuthToken()\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(payload)\r\n  }).then((res) => res.json())\r\n}\r\nexport const deleteArticle = (id) => {\r\n  const token = getAuthToken()\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      'content-type': 'application/json'\r\n    }\r\n  })\r\n    .then((res) => res.json())\r\n}\r\nexport const editArticle = (id, payload) => {\r\n  const token = getAuthToken()\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n  method: 'PATCH',\r\n  headers: {\r\n    authorization: `Bearer ${token}`,\r\n    'content-type': 'application/json'\r\n  },\r\n  body: JSON.stringify(payload)\r\n})\r\n.then(res => res.json())\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { setAuthToken } from '../../utils'\r\nimport {\r\n  getMe as getAPIMe,\r\n  login as loginAPI,\r\n  register as registerAPI\r\n} from '../../WebAPI'\r\n\r\n\r\nexport const userReducer = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n    errorMessage: ''\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n    setErrorMessage: (state, action) => {\r\n      state.errorMessage = action.payload\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setUser, setErrorMessage } = userReducer.actions;\r\n\r\nexport const getMe = () => dispatch => {\r\n  getAPIMe().then((res) => {\r\n    if (res.ok) {\r\n      dispatch(setUser(res.data))\r\n    }   \r\n  })\r\n}\r\n\r\nexport const login = (username, password, history) => dispatch => {\r\n\r\n  loginAPI(username, password, history).then((data) => {\r\n    if (data.ok === 0) {\r\n      return dispatch(setErrorMessage(data.message))\r\n    }\r\n    setAuthToken(data.token)\r\n    getAPIMe().then((response) => {\r\n      // const history = useHistory()\r\n      if (response.ok !== 1) {\r\n        setAuthToken(null)\r\n        return dispatch(setErrorMessage(response.toString()))\r\n      }\r\n      dispatch(setUser(response.data))\r\n      history.push('/')\r\n    })\r\n  })\r\n}\r\nexport const register = (username, password, nickname, history) => dispatch => {\r\n  registerAPI(username, password, nickname, history).then((data) => {\r\n    if (data.ok === 0) {\r\n      return dispatch(setErrorMessage(data.message))\r\n    }\r\n    setAuthToken(data.token)\r\n    getAPIMe().then((response) => {\r\n      if (response.ok !== 1) {\r\n        setAuthToken(null)\r\n        return dispatch(setErrorMessage(response.toString()))\r\n      }\r\n      dispatch(setUser(response.data))\r\n      history.push('/')\r\n    })\r\n  })\r\n}\r\n\r\nexport default userReducer.reducer;\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, setErrorMessage } from '../../redux/reducers/userReducer'\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  margin-top: 80px;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  max-width: 500px;\r\n  min-height: 200px;\r\n  box-shadow: 4px 4px 4px 4px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nexport default function LoginPage() {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  //const [errorMessage, setErrorMessage] = useState('')\r\n  const errorMessage = useSelector((store) => store.user.errorMessage)\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setErrorMessage(null))\r\n    }\r\n  }, [dispatch])\r\n  const handleSubmit = () => {\r\n    dispatch(setErrorMessage(null))\r\n    dispatch(login(username, password, history))\r\n  }\r\n  return (\r\n    <Container>\r\n      <form onSubmit={handleSubmit}>\r\n      <div>\r\n        帳號：<input value={username} onChange={ (e) => setUsername(e.target.value) }/>\r\n      </div>\r\n      <div>\r\n        密碼：<input type=\"password\" value={password} onChange={ (e) => setPassword(e.target.value) }/>\r\n      </div>\r\n      <button>登入</button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </form>\r\n    </Container>\r\n  )\r\n}\r\n","//import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  getArticle,\r\n  createPost,\r\n  getPosts as getAPIPosts,\r\n  getMe as getAPIMe,\r\n  deleteArticle,\r\n  editArticle\r\n} from '../../WebAPI'\r\n\r\nexport const postReducer = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    user: null,\r\n    isLoadingPost: false,\r\n    post: null,\r\n    newPostResponse: null,\r\n    posts: [],\r\n    amount: 0\r\n  },\r\n  reducers: {\r\n    setIsLoadingPost: (state, action) => {\r\n      state.isLoadingPost = action.payload\r\n    },\r\n    setPost: (state, action) => {\r\n      state.post = action.payload\r\n    },\r\n    setNewPostResponse: (state, action) => {\r\n      state.newPostResponse = action.payload\r\n    },\r\n    setPosts: (state, action) => {\r\n      state.posts = action.payload\r\n    },\r\n    setAmount: (state, action) => {\r\n      state.amount = action.payload\r\n    },\r\n    setAuth: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setIsLoadingPost, setPost, setNewPostResponse, setPosts, setAmount, setAuth } = postReducer.actions;\r\n\r\nexport const getPost = (id) => (dispatch) => {\r\n  dispatch(setIsLoadingPost(true))\r\n  getArticle(id).then(res => {\r\n    console.log(res)\r\n    dispatch(setPost(res))\r\n    dispatch(setIsLoadingPost(false))\r\n  })\r\n}\r\nexport const newPost = data => dispatch => {\r\n  createPost(data).then((res) => {\r\n    dispatch(setNewPostResponse(res))\r\n  }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getPosts = data => dispatch => {\r\n  getAPIPosts(data)\r\n  .then((posts) => {\r\n    dispatch(setAmount(posts.amount))\r\n    return posts.res\r\n  }).then((res) => {\r\n    dispatch(setPosts(res))\r\n  }).catch((err) => console.log(err))\r\n}\r\n\r\nexport const getMe = () => dispatch => {\r\n  getAPIMe().then((res) => {\r\n    if (res.ok) {\r\n      dispatch(setAuth(res.data))\r\n    }   \r\n  })\r\n}\r\nexport const deletePost = (id, page) => dispatch => {\r\n  deleteArticle(id).then(() => {\r\n    getAPIPosts(page)\r\n      .then(\r\n        (posts) => {\r\n          dispatch(setAmount(posts.amount))\r\n          return posts.res\r\n        }\r\n      ).then(\r\n        (posts) => dispatch(setPosts(posts))\r\n      )\r\n  })\r\n}\r\nexport const editPost = (id, data) => dispatch => {\r\n  editArticle(id, data).then(() => {\r\n    dispatch(getPost(id))\r\n  })\r\n}\r\n\r\nexport default postReducer.reducer;\r\n\r\n","import styled from 'styled-components'\r\nimport { useEffect, useState, React } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPosts, deletePost, editPost } from '../../redux/reducers/postReducer'\r\n\r\nconst Root = styled.div`\r\n  width: 85%;\r\n  margin: 0 auto;\r\n`\r\nconst PostContainer = styled.div`\r\n  border-bottom: 1px solid rgba(o, 12, 34, 0.2);\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n`\r\nconst PostTitle = styled(Link)`\r\n  font-size: 24px;\r\n  color: #333;\r\n  text-decoration: none;\r\n`\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.8);\r\n`\r\nconst Page = styled.div`\r\n  display: inline-block;\r\n  border: 1px solid black;\r\n  margin-right: 5px;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  ${(props) => props.$active &&\r\n    `\r\n      background: rgba(0, 0, 0, 0.1);\r\n      font-weight: bold;\r\n    `}\r\n`\r\nconst PageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 80px;\r\n`\r\nconst PostDelete = styled(Link)`\r\n  color: black;\r\n  text-decoration: none;\r\n`\r\nconst PostRightContainer = styled.div`\r\n  \r\n`\r\nfunction Post({ post, handleDelete, user, handleEdit }) {\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\r\n      <PostRightContainer>\r\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n        {user && <PostDelete to=\"\" onClick={() => handleDelete(post.id)}>刪除</PostDelete>}\r\n      </PostRightContainer>\r\n    </PostContainer>\r\n  )\r\n}\r\nexport default function HomePage() {\r\n  const [pagination, setPage] = useState([])\r\n  const [currentPage, setCurrentPage] = useState('1')\r\n  const user = useSelector((store) => store.user.user)\r\n  const dispatch = useDispatch()\r\n  const posts = useSelector((store) => store.posts.posts)\r\n  const amount = useSelector((store) => store.posts.amount)\r\n  useEffect(() => {\r\n    dispatch(getPosts())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const arr = []\r\n    for (let i = 1; i <= Math.ceil(amount / 5); i++) {\r\n      arr.push(i)\r\n    }\r\n    setPage(arr)\r\n  }, [amount])\r\n\r\n  const handlePage = (e) => {\r\n    const page = e.target.innerText\r\n    setCurrentPage(page)\r\n    dispatch(getPosts(page))\r\n  }\r\n  const handleDelete = (id) => {\r\n    dispatch(deletePost(id, currentPage))\r\n  }\r\n  const handleEdit = (id) => {\r\n    dispatch(editPost(id, currentPage))\r\n  }\r\n  return (\r\n    <Root>\r\n      {posts.map((post) => <Post user={user} handleEdit={handleEdit} handleDelete={handleDelete} key={post.id} post={post} />)}\r\n      <PageContainer>\r\n      {pagination.map((page) =>\r\n        <Page key={page} value={page} $active={currentPage === page.toLocaleString()} onClick={(e) => { handlePage(e) }}>{page}</Page>\r\n      )}\r\n      </PageContainer>\r\n    </Root>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, useLocation, useHistory } from 'react-router-dom'\r\nimport { setAuthToken } from '../../utils'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setUser } from '../../redux/reducers/userReducer'\r\n\r\nconst HeaderContainer = styled.div`\r\n  height: 64px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n  padding: 0px 32px;\r\n`\r\nconst Brand = styled.div`\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n`\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n`\r\nconst Nav = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n  ${(props) => props.$active &&\r\n  `\r\n    background: rgba(0, 0, 0, 0.1)\r\n  `}\r\n`\r\nconst LeftContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  ${NavbarList} {\r\n    margin-left: 32px;\r\n  }\r\n`\r\nexport default function Header() {\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const user = useSelector(store => store.user.user)\r\n  const dispatch = useDispatch()\r\n  const handleLogout = () => {\r\n    setAuthToken('')\r\n    dispatch(setUser(null))\r\n    if (location.pathname !== '/') {\r\n      history.push('/')\r\n    }\r\n  }\r\n  return (\r\n    <HeaderContainer>\r\n      <LeftContainer>\r\n        <Brand>我的第一個部落格</Brand>\r\n        <NavbarList>\r\n          <Nav to=\"/\" $active={location.pathname === '/'}>首頁</Nav>\r\n          <Nav to=\"/about\" $active={location.pathname === '/about'}>About</Nav>\r\n          {user && <Nav to=\"/new-post\" $active={location.pathname === '/new-post'}>發布文章</Nav>}\r\n        </NavbarList>\r\n      </LeftContainer>\r\n      <NavbarList>\r\n      {!user && <Nav to=\"/register\" $active={location.pathname === '/register'}>註冊</Nav>}\r\n        {!user && <Nav to=\"/login\" $active={location.pathname === '/login'}>登入</Nav>}\r\n        {user && <Nav to=\"\" onClick={handleLogout}>登出</Nav>}\r\n      </NavbarList>\r\n    </HeaderContainer>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { useEffect, React } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPost } from '../../redux/reducers/postReducer'\r\n\r\nconst Root = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  margin-top: 40px;\r\n  line-height: 1.5;\r\n`\r\nconst PostDelete = styled(Link)`\r\n  color: black;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  margin-bottom: 20px;\r\n  border: 1px solid black;\r\n`\r\nexport default function ArticlePage() {\r\n  const dispatch = useDispatch()\r\n  //const isLoading = useSelector(store => store.posts.isLoadingPost)\r\n  const post = useSelector(store => store.posts.post)\r\n  const user = useSelector((store) => store.user.user)\r\n  const { id } = useParams()\r\n  useEffect(() => {\r\n    console.log('redner')\r\n    dispatch(getPost(id))\r\n  }, [id, dispatch])\r\n  return (\r\n    <Root>\r\n      {user && <PostDelete to={`/edit-post/${id}`} >編輯</PostDelete>}\r\n      {post && <h2>{post[0].title}</h2>}\r\n      {post && <div>{post[0].body}</div>}\r\n      <br />\r\n    </Root>\r\n  )\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, setErrorMessage } from '../../redux/reducers/userReducer'\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  margin-top: 80px;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  max-width: 500px;\r\n  min-height: 200px;\r\n  box-shadow: 4px 4px 4px 4px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nexport default function RegisterPage() {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [nickname, setNickname] = useState('')\r\n  const errorMessage = useSelector((store) => store.user.errorMessage)\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setErrorMessage(null))\r\n    }\r\n  }, [dispatch])\r\n  const handleSubmit = (e) => {\r\n    dispatch(setErrorMessage(null))\r\n    dispatch(register(username, password, nickname, history))\r\n  }\r\n  return (\r\n    <Container>\r\n      <form onSubmit={handleSubmit}>\r\n      <div>\r\n        帳號： <input value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n      </div>\r\n      <div>\r\n        密碼： <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n      </div>\r\n      <div>\r\n        暱稱： <input value={nickname} onChange={(e) => setNickname(e.target.value)}/>\r\n      </div>\r\n      <button>註冊</button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </form>\r\n    </Container>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { useState, React, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newPost, setNewPostResponse } from '../../redux/reducers/postReducer'\r\n\r\n// const ErrorMessage = styled.div`\r\n//   color: red;\r\n// `\r\nconst Root = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  margin-top: 40px;\r\n  line-height: 1.5;\r\n`\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  margin-top: 80px;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  max-width: 800px;\r\n  min-height: 70vh;\r\n  box-shadow: 4px 4px 4px 4px rgba(0, 0, 0, 0.2);\r\n  margin-bottom: 40px;\r\n  textarea{\r\n    height: 300px;\r\n    width: 80%;\r\n    margin-top: 20px;\r\n  }\r\n  input{\r\n    margin-top: 40px;\r\n    width: 80%\r\n  }\r\n`\r\nexport default function NewPostPage() {\r\n  const [title, setTitle] = useState('')\r\n  const [article, setArticle] = useState('')\r\n  // const [errorMessage, setErrorMessage] = useState()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const newPostResponse = useSelector((store) => store.posts.newPostResponse)\r\n  const handleSubmit = () => {\r\n    dispatch(newPost({\r\n      title,\r\n      body: article\r\n    }))\r\n  }\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setNewPostResponse(null))\r\n    }\r\n  }, [dispatch])\r\n  useEffect(() => {\r\n    if(newPostResponse && newPostResponse.id) {\r\n      history.push('/')\r\n    }\r\n  }, [newPostResponse, history])\r\n  return (\r\n    <Root>\r\n      <Container>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          標題：<input value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n        </div>\r\n        <div>\r\n          內容：<textarea value={article} onChange={(e) => setArticle(e.target.value)} />\r\n        </div>\r\n        <button>送出</button>\r\n        {/* <ErrorMessage>{errorMessage}</ErrorMessage> */}\r\n      </form>\r\n      </Container>\r\n    </Root>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { useState, React, useEffect } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { editPost, getPost } from '../../redux/reducers/postReducer'\r\n\r\nconst Root = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  margin-top: 40px;\r\n  line-height: 1.5;\r\n`\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  margin-top: 80px;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  max-width: 800px;\r\n  min-height: 70vh;\r\n  box-shadow: 4px 4px 4px 4px rgba(0, 0, 0, 0.2);\r\n  margin-bottom: 40px;\r\n  textarea{\r\n    height: 300px;\r\n    width: 80%;\r\n    margin-top: 20px;\r\n  }\r\n  input{\r\n    margin-top: 40px;\r\n    width: 80%\r\n  }\r\n`\r\nexport default function EditPostPage() {\r\n  const [title, setTitle] = useState('')\r\n  const [article, setArticle] = useState('')\r\n  const history = useHistory()\r\n  const post = useSelector(store => store.posts.post)\r\n  const dispatch = useDispatch()\r\n  const newPostResponse = useSelector((store) => store.posts.newPostResponse)\r\n  const { id } = useParams()\r\n  const handleSubmit = () => {\r\n    dispatch(editPost(id,{\r\n      title,\r\n      body: article\r\n    }))\r\n    history.push(`/posts/${id}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id))\r\n  }, [id, dispatch])\r\n\r\n  useEffect(() => {\r\n    setTitle(post[0].title)\r\n    setArticle(post[0].body)\r\n  }, [post])\r\n\r\n  useEffect(() => {\r\n    if(newPostResponse && newPostResponse.id) {\r\n      history.push('/')\r\n    }\r\n  }, [newPostResponse, history])\r\n  return (\r\n    <Root>\r\n      <Container>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          標題：<input value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n        </div>\r\n        <div>\r\n          內容：<textarea value={article} onChange={(e) => setArticle(e.target.value)} />\r\n        </div>\r\n        <button>送出</button>\r\n        {/* <ErrorMessage>{errorMessage}</ErrorMessage> */}\r\n      </form>\r\n      </Container>\r\n    </Root>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport React from 'react'\r\n\r\nconst Root = styled.div`\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  margin-top: 5%;\r\n`\r\nconst RightContainer = styled.div`\r\n  margin-top: 20%;\r\n  text-align: right;\r\n`\r\nexport default function AboutPage() {\r\n  return (\r\n    <Root>\r\n      <p>啦啦啦~~~ React 接 API BLOG~~~~</p>\r\n      <p>不想排版~~~~~</p>\r\n      <p>好累~~~~~</p>\r\n      <RightContainer>\r\n      <p>還是稍微排一下好了</p>\r\n      <p>不知道怎麼排</p>\r\n      <p>這樣看起來好像很文青</p>\r\n      </RightContainer>\r\n    </Root>\r\n  )\r\n}\r\n","import styled from 'styled-components'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\nimport { useEffect, React } from 'react'\nimport LoginPage from './pages/LoginPage'\nimport HomePage from './pages/HomePage'\nimport Header from './component/Header/Header'\nimport ArticlePage from './pages/ArticlePage'\nimport RegisterPage from './pages/RegisterPage'\nimport NewPostPage from './pages/NewPostPage'\nimport EditPostPage from './pages/EditPostPage'\nimport AboutPage from './pages/AboutPage'\nimport { getAuthToken } from './utils'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getMe } from './redux/reducers/userReducer'\n\nconst Root = styled.div`\n  padding-top: 64px;\n`\nfunction App() {\n  //const [user, setUser] = useState(null)\n  const user = useSelector(store => store.user.user)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    const token = getAuthToken()\n    if (token) {\n      dispatch(getMe())\n    }\n  }, [dispatch])\n  return (\n    <Root>\n      <Router>\n        <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/login\">\n              {!user ? <LoginPage /> : <Redirect to=\"/\" />}\n            </Route>\n            <Route exact path=\"/posts/:id\">\n              <ArticlePage  />\n            </Route>\n            <Route exact path=\"/register\">\n            {!user ? <RegisterPage />: <Redirect to=\"/\" />}        \n            </Route>\n            <Route exact path=\"/new-post\">\n              {user ? <NewPostPage /> : <Redirect to=\"/login\" />}\n            </Route>\n            <Route exact path=\"/edit-post/:id\">\n              {user ? <EditPostPage /> : <Redirect to=\"/login\" />}\n            </Route>\n            <Route exact path=\"/about\">\n              <AboutPage />\n            </Route>\n          </Switch>\n      </Router>\n    </Root>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport postReducer from './reducers/postReducer';\r\nimport userReducer from './reducers/userReducer';\r\nexport const store = configureStore({\r\n  reducer: {\r\n    posts: postReducer,\r\n    user: userReducer\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}