{"version":3,"sources":["logo.svg","TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","todo","handleDeleteTodo","handleToggleIsDone","className","id","type","defaultChecked","isDone","onClick","content","App","useState","todos","setTodos","value","setValue","filter","setFilter","map","handleFilterDone","status","placeholder","onChange","e","target","onKeyDown","key","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,I,gBCIA,SAASA,EAAT,GAAkE,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,mBACzD,OACE,sBAAKC,UAAU,gBAAgB,eAAcH,EAAKI,GAAlD,UACA,6BACE,kCACE,uBAAOD,UAAU,mBAAmBE,KAAK,WAAWC,iBAAgBN,EAAKO,OAAuBC,QAAS,kBAAMN,EAAmBF,EAAKI,OACvI,sBAAMD,UAAU,gBAAhB,SAAiCH,EAAKS,eAG1C,sBAAMN,UAAU,kBAAkBK,QAAS,WACzCP,EAAiBD,EAAKI,KADxB,kBCPJ,IAAIA,EAAK,EAkEMM,MAjEf,WACE,MAA0BC,mBAAS,CACjC,CAACP,GAAG,EAAGK,QAAQ,MAAOF,QAAO,GAC7B,CAACH,GAAG,EAAGK,QAAQ,MAAOF,QAAQ,KAFhC,mBAAOK,EAAP,KAAcC,EAAd,KAIA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,OAArC,mBAAOK,EAAP,KAAeC,EAAf,KAcMhB,EAAmB,SAAAG,GACvBS,EAASD,EAAMI,QAAO,SAAAhB,GAAI,OAAIA,EAAKI,KAAOA,OAKtCF,EAAqB,SAAAE,GACzBS,EAASD,EAAMM,KAAI,SAAAlB,GACjB,OAAIA,EAAKI,KAAOA,EAAWJ,EACpB,2BACFA,GADL,IAEEO,QAASP,EAAKO,cAIdY,EAAmB,SAAAC,GACvBH,EAAUG,IAEZ,OACE,qBAAKjB,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACF,2CACA,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,uBAAOE,KAAK,OAAOgB,YAAY,yBAAyBP,MAAOA,EAAOQ,SA3BlD,SAACC,GACzBR,EAASQ,EAAEC,OAAOV,QA0BqFW,UArC/E,SAACF,GACX,UAAVA,EAAEG,MACJb,EAAS,CAAC,CACRT,KACAK,QAASK,IAFH,mBAGFF,KACNG,EAAS,IACTX,MA8BmID,UAAU,qBAE7I,qBAAKA,UAAU,sBAAf,SAEIS,EACCI,QAAO,SAAAhB,GAAI,MAAe,cAAXgB,EAAyBhB,EAAKO,OAAoB,WAAXS,IAAuBhB,EAAKO,UAClFW,KAAI,SAAAlB,GAAI,OAAI,cAACD,EAAD,CAAwBC,KAAMA,EAAMC,iBAAkBA,EAAkBC,mBAAoBA,GAA7EF,EAAKI,SAGrC,sBAAKD,UAAU,kBAAkBwB,KAAK,QAAQ,aAAW,kCAAzD,UACE,wBAAQnB,QAAS,WAAOW,EAAiB,QAAzC,iBACA,wBAAQX,QAAS,WAAOW,EAAiB,WAAzC,oBACA,wBAAQX,QAAS,WAAOW,EAAiB,cAAzC,0BAEF,wBAAQd,KAAK,SAASF,UAAU,0CAA0CK,QAnClD,SAAAJ,GAC1BS,EAAS,KAkCP,gCCrDSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e0c244ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport './style.css';\r\n\r\nexport default function TodoItem ({todo, handleDeleteTodo, handleToggleIsDone}) {\r\n  return (\r\n    <div className=\"content__list\" data-todo-id={todo.id}>\r\n    <li>                \r\n      <label>\r\n        <input className=\"list-item active\" type=\"checkbox\" defaultChecked={todo.isDone ? true : false} onClick={() => handleToggleIsDone(todo.id)}/> \r\n        <span className=\"content__text\">{todo.content}</span>  \r\n      </label>\r\n    </li>\r\n    <span className=\"content__cancel\" onClick={()=> {\r\n      handleDeleteTodo(todo.id)\r\n    }}>X</span>\r\n  </div> \r\n  )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport './style.css';\nimport TodoItem from './TodoItem.js'\nimport { useState } from 'react';\n\nlet id = 3\nfunction App() {\n  const [todos, setTodos] = useState([\n    {id:1, content:'abc', isDone:true},\n    {id:2, content:'bbc', isDone: false}\n  ])\n  const [value, setValue] = useState('')\n  const [filter, setFilter] = useState('all')\n  const handleButtonClick = (e) => {\n    if (e.key === 'Enter') {\n      setTodos([{\n        id,\n        content: value\n      }, ...todos])\n      setValue('')\n      id++\n    }\n  }\n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n  const handleDeleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n  const handleDeleteTodoAll = id => {\n    setTodos([])\n  }\n  const handleToggleIsDone = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo\n      return {\n        ...todo,\n        isDone: !todo.isDone\n      }\n    }))\n  }\n  const handleFilterDone = status => {\n    setFilter(status)\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n    <h1>Todo List</h1>\n    <div className=\"wrapper\">\n      <div className=\"content__input-border\">\n        <input type=\"text\" placeholder=\"type something here...\" value={value} onChange={handleInputChange} onKeyDown={handleButtonClick} className=\"content__input\" />\n      </div>\n      <div className=\"content__lists mb-5\">\n        {\n          todos\n          .filter(todo => filter === 'completed' ? todo.isDone : filter === 'active' ? !todo.isDone : true)\n          .map(todo => <TodoItem key={todo.id} todo={todo} handleDeleteTodo={handleDeleteTodo} handleToggleIsDone={handleToggleIsDone} />)\n        }   \n      </div>\n      <div className=\"content__status\" role=\"group\" aria-label=\"Basic radio toggle button group\">\n        <button onClick={() => {handleFilterDone('all')}}>all</button>\n        <button onClick={() => {handleFilterDone('active')}}>active</button>\n        <button onClick={() => {handleFilterDone('completed')}}>completed</button>\n      </div>\n      <button type=\"button\" className=\"btn btn-outline-secondary btn-clear-all\" onClick={handleDeleteTodoAll}>Clear All</button>\n    </div>\n  </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}