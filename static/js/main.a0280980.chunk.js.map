{"version":3,"sources":["TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","todo","handleDeleteTodo","handleToggleIsDone","className","id","type","defaultChecked","isDone","onClick","content","App","useState","todos","setTodos","value","setValue","filter","setFilter","map","handleFilterDone","status","placeholder","onChange","e","target","onKeyDown","key","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAGe,SAASA,EAAT,GAAkE,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,mBACzD,OACE,sBAAKC,UAAU,gBAAgB,eAAcH,EAAKI,GAAlD,UACA,6BACE,kCACE,uBAAOD,UAAU,mBAAmBE,KAAK,WAAWC,iBAAgBN,EAAKO,OAAuBC,QAAS,kBAAMN,EAAmBF,EAAKI,OACvI,sBAAMD,UAAU,gBAAhB,SAAiCH,EAAKS,eAG1C,sBAAMN,UAAU,kBAAkBK,QAAS,WACzCP,EAAiBD,EAAKI,KADxB,kBCPJ,IAAIA,EAAK,EAkEMM,MAjEf,WACE,MAA0BC,mBAAS,CACjC,CAACP,GAAG,EAAGK,QAAQ,MAAOF,QAAO,GAC7B,CAACH,GAAG,EAAGK,QAAQ,MAAOF,QAAQ,KAFhC,mBAAOK,EAAP,KAAcC,EAAd,KAIA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,OAArC,mBAAOK,EAAP,KAAeC,EAAf,KAcMhB,EAAmB,SAAAG,GACvBS,EAASD,EAAMI,QAAO,SAAAhB,GAAI,OAAIA,EAAKI,KAAOA,OAKtCF,EAAqB,SAAAE,GACzBS,EAASD,EAAMM,KAAI,SAAAlB,GACjB,OAAIA,EAAKI,KAAOA,EAAWJ,EACpB,2BACFA,GADL,IAEEO,QAASP,EAAKO,cAIdY,EAAmB,SAAAC,GACvBH,EAAUG,IAEZ,OACE,qBAAKjB,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACF,2CACA,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,uBAAOE,KAAK,OAAOgB,YAAY,yBAAyBP,MAAOA,EAAOQ,SA3BlD,SAACC,GACzBR,EAASQ,EAAEC,OAAOV,QA0BqFW,UArC/E,SAACF,GACX,UAAVA,EAAEG,MACJb,EAAS,CAAC,CACRT,KACAK,QAASK,IAFH,mBAGFF,KACNG,EAAS,IACTX,MA8BmID,UAAU,qBAE7I,qBAAKA,UAAU,sBAAf,SAEIS,EACCI,QAAO,SAAAhB,GAAI,MAAe,cAAXgB,EAAyBhB,EAAKO,OAAoB,WAAXS,IAAuBhB,EAAKO,UAClFW,KAAI,SAAAlB,GAAI,OAAI,cAACD,EAAD,CAAwBC,KAAMA,EAAMC,iBAAkBA,EAAkBC,mBAAoBA,GAA7EF,EAAKI,SAGrC,sBAAKD,UAAU,kBAAkBwB,KAAK,QAAQ,aAAW,kCAAzD,UACE,wBAAQnB,QAAS,WAAOW,EAAiB,QAAzC,iBACA,wBAAQX,QAAS,WAAOW,EAAiB,WAAzC,oBACA,wBAAQX,QAAS,WAAOW,EAAiB,cAAzC,0BAEF,wBAAQd,KAAK,SAASF,UAAU,0CAA0CK,QAnClD,SAAAJ,GAC1BS,EAAS,KAkCP,gCCpDSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a0280980.chunk.js","sourcesContent":["import './App.css';\r\nimport './style.css';\r\n\r\nexport default function TodoItem ({todo, handleDeleteTodo, handleToggleIsDone}) {\r\n  return (\r\n    <div className=\"content__list\" data-todo-id={todo.id}>\r\n    <li>                \r\n      <label>\r\n        <input className=\"list-item active\" type=\"checkbox\" defaultChecked={todo.isDone ? true : false} onClick={() => handleToggleIsDone(todo.id)}/> \r\n        <span className=\"content__text\">{todo.content}</span>  \r\n      </label>\r\n    </li>\r\n    <span className=\"content__cancel\" onClick={()=> {\r\n      handleDeleteTodo(todo.id)\r\n    }}>X</span>\r\n  </div> \r\n  )\r\n}","import './App.css';\r\nimport './style.css';\r\nimport TodoItem from './TodoItem.js'\r\nimport { useState } from 'react';\r\n\r\nlet id = 3\r\nfunction App() {\r\n  const [todos, setTodos] = useState([\r\n    {id:1, content:'abc', isDone:true},\r\n    {id:2, content:'bbc', isDone: false}\r\n  ])\r\n  const [value, setValue] = useState('')\r\n  const [filter, setFilter] = useState('all')\r\n  const handleButtonClick = (e) => {\r\n    if (e.key === 'Enter') {\r\n      setTodos([{\r\n        id,\r\n        content: value\r\n      }, ...todos])\r\n      setValue('')\r\n      id++\r\n    }\r\n  }\r\n  const handleInputChange = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n  const handleDeleteTodo = id => {\r\n    setTodos(todos.filter(todo => todo.id !== id))\r\n  }\r\n  const handleDeleteTodoAll = id => {\r\n    setTodos([])\r\n  }\r\n  const handleToggleIsDone = id => {\r\n    setTodos(todos.map(todo => {\r\n      if (todo.id !== id) return todo\r\n      return {\r\n        ...todo,\r\n        isDone: !todo.isDone\r\n      }\r\n    }))\r\n  }\r\n  const handleFilterDone = status => {\r\n    setFilter(status)\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"content\">\r\n    <h1>Todo List</h1>\r\n    <div className=\"wrapper\">\r\n      <div className=\"content__input-border\">\r\n        <input type=\"text\" placeholder=\"type something here...\" value={value} onChange={handleInputChange} onKeyDown={handleButtonClick} className=\"content__input\" />\r\n      </div>\r\n      <div className=\"content__lists mb-5\">\r\n        {\r\n          todos\r\n          .filter(todo => filter === 'completed' ? todo.isDone : filter === 'active' ? !todo.isDone : true)\r\n          .map(todo => <TodoItem key={todo.id} todo={todo} handleDeleteTodo={handleDeleteTodo} handleToggleIsDone={handleToggleIsDone} />)\r\n        }   \r\n      </div>\r\n      <div className=\"content__status\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n        <button onClick={() => {handleFilterDone('all')}}>all</button>\r\n        <button onClick={() => {handleFilterDone('active')}}>active</button>\r\n        <button onClick={() => {handleFilterDone('completed')}}>completed</button>\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-outline-secondary btn-clear-all\" onClick={handleDeleteTodoAll}>Clear All</button>\r\n    </div>\r\n  </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}