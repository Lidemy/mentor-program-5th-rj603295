{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","square","pieceColor","x","y","upDownCheck","leftRightCheck","rightUpCheck","leftUpCheck","i","j","console","log","Board","useState","Array","fill","squares","setSquares","currentX","setCurrentX","currentY","setCurrentY","xIsNext","setxIsNext","renderSquare","Square","boardValue","handleClick","newBoard","JSON","parse","stringify","status","winner","className","map","index","squareArray","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6ab10e7.chunk.js","sourcesContent":["import './style.css';\r\nimport { useState } from 'react';\r\nfunction calculateWinner(square, pieceColor, x, y) {\r\n    if (pieceColor === null) {\r\n      return\r\n    }\r\n    let upDownCheck = 0\r\n    let leftRightCheck = 0\r\n    let rightUpCheck = 0\r\n    let leftUpCheck = 0\r\n    //下\r\n    let i = x\r\n    let j = y\r\n    while (i+1 < 19 && pieceColor === square[i+1][y]) {\r\n      upDownCheck++\r\n      i++\r\n    }\r\n    i = x\r\n    //上\r\n    while (i-1 > 0 && pieceColor === square[i-1][y]) {\r\n      upDownCheck++\r\n      i--\r\n    }\r\n    i = x\r\n    //右\r\n    while (j+1 < 19 && pieceColor === square[x][j+1]) {\r\n      leftRightCheck++\r\n      j++\r\n    }\r\n    j = y\r\n    // 左\r\n    while (j-1 > 0 && pieceColor === square[x][j-1]) {\r\n      leftRightCheck++\r\n      j--\r\n    }\r\n    j = y\r\n    //右上\r\n    while (i-1 > 0 && j+1 < 19 && pieceColor === square[i-1][j+1]) {\r\n      rightUpCheck++\r\n      i--\r\n      j++\r\n    }\r\n    i = x\r\n    j = y\r\n    //左下\r\n    while (i+1 < 19 && j-1 > 0 && pieceColor === square[i+1][j-1]) {\r\n      rightUpCheck++\r\n      i++\r\n      j--\r\n    }\r\n    i = x\r\n    j = y\r\n    //左上\r\n    while (i-1 > 0 && j-1 > 0 && pieceColor === square[i-1][j-1]) {\r\n      leftUpCheck++\r\n      i--\r\n      j--\r\n    }\r\n    i = x\r\n    j = y\r\n    //右下\r\n    while (i+1 < 19 && j+1 < 19 && pieceColor === square[i+1][j+1]) {\r\n      leftUpCheck++\r\n      i++\r\n      j++\r\n    }\r\n    i = x\r\n    j = y\r\n    if (\r\n      upDownCheck >= 4 || leftRightCheck >= 4 || \r\n      rightUpCheck >= 4 || leftUpCheck >= 4 \r\n    ) {\r\n      console.log('贏家')\r\n      return pieceColor;\r\n\r\n    } else {\r\n      upDownCheck = 0\r\n      leftRightCheck = 0\r\n      rightUpCheck = 0\r\n      leftUpCheck = 0\r\n    }\r\n  }\r\nfunction Board () {\r\n  const [squares, setSquares] = useState(Array(19).fill(Array(19).fill(null)))\r\n  const [currentX, setCurrentX] = useState(0)\r\n  const [currentY, setCurrentY] = useState(0)\r\n  const [xIsNext, setxIsNext] = useState(true)\r\n  const handleClick = (i, j) => { \r\n    const newBoard = JSON.parse(JSON.stringify(squares))\r\n    if (calculateWinner(newBoard, newBoard[currentX][currentY], currentX, currentY) || newBoard[i][j]) {\r\n      return\r\n    }\r\n    newBoard[i][j] = xIsNext ? '⚫' : '◯'\r\n    setSquares(newBoard)\r\n    setxIsNext(!xIsNext)\r\n    setCurrentX(i)\r\n    setCurrentY(j)\r\n  }\r\n  function renderSquare(i, j) {\r\n    return <Square boardValue={squares[i][j]} handleClick={() => handleClick(i, j)} />;\r\n  }\r\n  function squareArray (index) {\r\n    return (\r\n      <div className=\"board-row\">\r\n        {renderSquare(index, 0)}\r\n        {renderSquare(index, 1)}\r\n        {renderSquare(index, 2)}\r\n        {renderSquare(index, 3)}\r\n        {renderSquare(index, 4)}\r\n        {renderSquare(index, 5)}\r\n        {renderSquare(index, 6)}\r\n        {renderSquare(index, 7)}\r\n        {renderSquare(index, 8)}\r\n        {renderSquare(index, 9)}\r\n        {renderSquare(index, 10)}\r\n        {renderSquare(index, 11)}\r\n        {renderSquare(index, 12)}\r\n        {renderSquare(index, 13)}\r\n        {renderSquare(index, 14)}\r\n        {renderSquare(index, 15)}\r\n        {renderSquare(index, 16)}\r\n        {renderSquare(index, 17)}\r\n        {renderSquare(index, 18)}\r\n      </div> \r\n    )\r\n  }\r\n  const winner = calculateWinner(squares, squares[currentX][currentY], currentX, currentY);\r\n  let status;\r\n  if (winner) {\r\n    status = 'Winner: ' + winner;\r\n  } else {\r\n    status = 'Next player: ' + (xIsNext ? '⚫' : '◯');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"status\">{status}</div>\r\n      {\r\n        squares.map((square, index) => squareArray(index))\r\n      }\r\n    </div>\r\n  );\r\n}\r\nfunction Square ({boardValue, handleClick}) {\r\n    return (\r\n      <button className=\"square\" onClick={handleClick}>\r\n         {boardValue}\r\n      </button>\r\n    );\r\n}\r\nfunction App() {\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}