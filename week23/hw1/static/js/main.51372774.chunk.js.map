{"version":3,"sources":["TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","todo","handleDeleteTodo","handleToggleIsDone","handleEditTodo","handleEditInputChange","className","id","onDoubleClick","e","style","display","isEdit","type","value","editValue","onChange","onClick","defaultChecked","isDone","content","App","useState","todos","setTodos","setValue","filter","setFilter","map","handleFilterDone","status","target","nodeName","innerText","placeholder","onKeyDown","key","trim","alert","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51372774.chunk.js","sourcesContent":["import './style.css'\r\nimport React from 'react'\r\n\r\nexport default function TodoItem({ todo, handleDeleteTodo, handleToggleIsDone, handleEditTodo, handleEditInputChange }) {\r\n  return (\r\n    <div className=\"content__list\" data-todo-id={todo.id} onDoubleClick={(e) => { handleEditTodo(e, todo.id) }}>\r\n      <div className=\"content__edit-input\" style={{ display: todo.isEdit ? 'flex' : 'none' }}>\r\n        <input type=\"text\" value={todo.editValue} onChange={(e) => handleEditInputChange(e, todo.id)} />\r\n        <button onClick={(e) => { handleEditTodo(e, todo.id) }}>done</button>\r\n        <button onClick={(e) => { handleEditTodo(e, todo.id) }}>cancel</button>\r\n      </div>\r\n\r\n    <li style={{ display: !todo.isEdit ? 'block' : 'none' }}>\r\n      <label>\r\n        <input className=\"list-item active\" type=\"checkbox\" defaultChecked={todo.isDone} onClick={() => handleToggleIsDone(todo.id)}/>\r\n        <span className=\"content__text\">{todo.content}</span>\r\n      </label>\r\n    </li>\r\n    <span style={{ display: !todo.isEdit ? 'block' : 'none' }} className=\"content__cancel\" onClick={() => {\r\n      handleDeleteTodo(todo.id)\r\n    }}>X</span>\r\n  </div>\r\n  )\r\n}\r\n","import './style.css'\r\nimport { React, useState } from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nlet id = 3\r\nfunction App() {\r\n  const [todos, setTodos] = useState([\r\n    {\r\n      id: 1,\r\n      content: 'abc',\r\n      isDone: true,\r\n      isEdit: false,\r\n      editValue: 'abc'\r\n    },\r\n    {\r\n      id: 2,\r\n      content: 'bbc',\r\n      isDone: false,\r\n      isEdit: false,\r\n      editValue: 'bbc'\r\n    }\r\n  ])\r\n  const [value, setValue] = useState('')\r\n  const [filter, setFilter] = useState('all')\r\n  const handleButtonClick = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (value.trim() === '') {\r\n        alert('Please input value')\r\n        return\r\n      }\r\n      setTodos([{\r\n        id,\r\n        content: value,\r\n        editValue: value\r\n      }, ...todos])\r\n      setValue('')\r\n      id++\r\n    }\r\n  }\r\n  const handleInputChange = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n  const handleDeleteTodo = (id) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id))\r\n  }\r\n  const handleDeleteTodoAll = (id) => {\r\n    setTodos([])\r\n  }\r\n  const handleToggleIsDone = (id) => {\r\n    setTodos(todos.map((todo) => {\r\n      if (todo.id !== id) return todo\r\n      return {\r\n        ...todo,\r\n        isDone: !todo.isDone\r\n      }\r\n    }))\r\n  }\r\n  const handleFilterDone = (status) => {\r\n    setFilter(status)\r\n  }\r\n  const handleEditTodo = (e, id) => {\r\n    if (e.target.nodeName === 'DIV') {\r\n      setTodos(todos.map((todo) => {\r\n        if (todo.id !== id) return todo\r\n        return {\r\n          ...todo,\r\n          isEdit: !todo.isEdit\r\n        }\r\n      }))\r\n    }\r\n    if (e.target.nodeName === 'BUTTON' && e.target.innerText === 'done') {\r\n      setTodos(todos.map((todo) => {\r\n        if (todo.id !== id) return todo\r\n        return {\r\n          ...todo,\r\n          content: todo.editValue,\r\n          isEdit: !todo.isEdit\r\n        }\r\n      }))\r\n    }\r\n    if (e.target.nodeName === 'BUTTON' && e.target.innerText === 'cancel') {\r\n      setTodos(todos.map((todo) => {\r\n        if (todo.id !== id) return todo\r\n        return {\r\n          ...todo,\r\n          editValue: todo.content,\r\n          isEdit: !todo.isEdit\r\n        }\r\n      }))\r\n    }\r\n  }\r\n  const handleEditInputChange = (e, id) => {\r\n    setTodos(todos.map((todo) => {\r\n      if (todo.id !== id) return todo\r\n      return {\r\n        ...todo,\r\n        editValue: e.target.value\r\n      }\r\n    }))\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"content\">\r\n        <h1>Todo List</h1>\r\n        <div className=\"wrapper\">\r\n          <div className=\"content__input-border\">\r\n            <input type=\"text\" placeholder=\"type something here...\" value={value} onChange={handleInputChange} onKeyDown={handleButtonClick} className=\"content__input\" />\r\n          </div>\r\n          <div className=\"content__lists mb-5\">\r\n            {\r\n              todos\r\n                .filter((todo) => (filter === 'completed' ? todo.isDone : filter === 'active' ? !todo.isDone : true))\r\n                .map((todo) => <TodoItem key={todo.id} todo={todo} handleEditInputChange={handleEditInputChange} handleEditTodo={handleEditTodo} handleDeleteTodo={handleDeleteTodo} handleToggleIsDone={handleToggleIsDone} />)\r\n            }\r\n          </div>\r\n          <div className=\"content__status\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n            <button onClick={() => { handleFilterDone('all') }}>all</button>\r\n            <button onClick={() => { handleFilterDone('active') }}>active</button>\r\n            <button onClick={() => { handleFilterDone('completed') }}>completed</button>\r\n          </div>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary btn-clear-all\" onClick={handleDeleteTodoAll}>Clear All</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}