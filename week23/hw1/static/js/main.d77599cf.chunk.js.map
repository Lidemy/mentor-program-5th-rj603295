{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","AddTodo.js","TodoItem.js","redux/selectors.js","App.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["ADD_TODO","DELETE_TODO","DELETE_TODO_ALL","FILTER_TODO","TOGGLE_ISDONE","EDIT_TODO","EDIT_INPUT","filterTodo","filter","type","payload","editTodo","e","id","AddTodo","useState","value","setValue","dispatch","useDispatch","className","placeholder","onKeyDown","key","content","isDone","addTodo","onChange","target","TodoItem","todo","onDoubleClick","nodeName","style","display","isEdit","editValue","editInput","onClick","defaultChecked","selectTodos","store","todos","selectFilter","App","useSelector","map","todoId","initialState","combineReducers","state","action","trim","alert","innerText","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d77599cf.chunk.js","sourcesContent":["export const ADD_TODO = 'add_todo'\r\nexport const DELETE_TODO = 'delete_todo'\r\nexport const DELETE_TODO_ALL = 'delete_todo_all'\r\nexport const FILTER_TODO = 'filter_todo'\r\nexport const TOGGLE_ISDONE = 'toggle_isDone'\r\nexport const EDIT_TODO = 'edit_todo'\r\nexport const EDIT_INPUT = 'edit_input'\r\n","import { ADD_TODO, DELETE_TODO, DELETE_TODO_ALL, TOGGLE_ISDONE, FILTER_TODO, EDIT_TODO, EDIT_INPUT } from './actionTypes'\r\n\r\nexport function addTodo(content, isDone = false) {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: {\r\n      content,\r\n      isDone\r\n    }\r\n  }\r\n}\r\nexport function deleteTodo(id) {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: {\r\n      id\r\n    }\r\n  }\r\n}\r\nexport function deleteAllTodo() {\r\n  return {\r\n    type: DELETE_TODO_ALL\r\n  }\r\n}\r\nexport function toggleIsDone(id) {\r\n  return {\r\n    type: TOGGLE_ISDONE,\r\n    payload: {\r\n      id\r\n    }\r\n  }\r\n}\r\nexport function filterTodo(filter) {\r\n  return {\r\n    type: FILTER_TODO,\r\n    payload: {\r\n      filter\r\n    }\r\n  }\r\n}\r\nexport function editTodo(e, id) {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload: {\r\n      e,\r\n      id\r\n    }\r\n  }\r\n}\r\nexport function editInput(e, id) {\r\n  return {\r\n    type: EDIT_INPUT,\r\n    payload: {\r\n      e,\r\n      id\r\n    }\r\n  }\r\n}\r\n","import { useState, React } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addTodo } from './redux/actions'\r\n\r\nexport default function AddTodo() {\r\n  const [value, setValue] = useState('')\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className=\"content__input-border\">\r\n    <input type=\"text\" placeholder=\"type something here...\" onKeyDown={(e) => {\r\n      if (e.key === 'Enter') {\r\n        dispatch(addTodo(value))\r\n        setValue('')\r\n      }\r\n    }} value={value} onChange={(e) => setValue(e.target.value)} className=\"content__input\" />\r\n    </div>\r\n  )\r\n}\r\n","import { useDispatch, React } from 'react-redux'\r\nimport { deleteTodo, toggleIsDone, editTodo, editInput } from './redux/actions'\r\n\r\nexport default function TodoItem({ todo }) {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className=\"content__list\" data-todo-id={todo.id} onDoubleClick={(e) => {\r\n      if (e.target.nodeName === 'DIV') {\r\n        dispatch(editTodo(e, todo.id))\r\n      }\r\n    }}>\r\n       <div className=\"content__edit-input\" style={{ display: todo.isEdit ? 'flex' : 'none' }}>\r\n        <input type=\"text\" value={todo.editValue} onChange={(e) => dispatch(editInput(e, todo.id))} />\r\n        <button onClick={(e) => dispatch(editTodo(e, todo.id))}>done</button>\r\n        <button onClick={(e) => dispatch(editTodo(e, todo.id))}>cancel</button>\r\n      </div>\r\n    <li style={{ display: !todo.isEdit ? 'block' : 'none' }}>\r\n      <label>\r\n        <input className=\"list-item active\" type=\"checkbox\" onClick={() => dispatch(toggleIsDone(todo.id))} defaultChecked={todo.isDone}/>\r\n        <span className=\"content__text\">{todo.content}</span>\r\n      </label>\r\n    </li>\r\n    <span style={{ display: !todo.isEdit ? 'block' : 'none' }} className=\"content__cancel\" onClick={() => {\r\n      dispatch(deleteTodo(todo.id))\r\n    }}>X</span>\r\n  </div>\r\n  )\r\n}\r\n","export const selectTodos = (store) => store.todos.todos\r\nexport const selectFilter = (store) => store.todos.filter\r\n","import React from 'react'\r\nimport './style.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport AddTodo from './AddTodo'\r\nimport TodoItem from './TodoItem'\r\nimport { selectTodos, selectFilter } from './redux/selectors'\r\nimport { deleteAllTodo, filterTodo } from './redux/actions'\r\n\r\nfunction App() {\r\n  const todos = useSelector(selectTodos)\r\n  const filter = useSelector(selectFilter)\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <h1>Todo List</h1>\r\n      <div className=\"wrapper\">\r\n          <AddTodo />\r\n      <div className=\"content__lists mb-5\">\r\n        {\r\n          todos\r\n            .filter((todo) => (filter === 'completed' ? todo.isDone : filter === 'active' ? !todo.isDone : true))\r\n            .map((todo) => <TodoItem key={todo.id} todo={todo}/>)\r\n        }\r\n      </div>\r\n    <button onClick={() => dispatch(filterTodo('all'))}>All</button>\r\n    <button onClick={() => dispatch(filterTodo('active'))}>Active</button>\r\n    <button onClick={() => dispatch(filterTodo('completed'))}>Completed</button>\r\n    <button onClick={() => dispatch(deleteAllTodo())}>Clear All</button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ADD_TODO, DELETE_TODO, DELETE_TODO_ALL, FILTER_TODO, TOGGLE_ISDONE, EDIT_TODO, EDIT_INPUT } from '../actionTypes'\r\n\r\nlet todoId = 0\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  filter: 'all'\r\n}\r\n\r\nexport default function todosReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TODO: {\r\n      if (action.payload.content.trim() === '') {\r\n        alert('Please input value')\r\n        return {\r\n          ...state,\r\n          todos: state.todos\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, {\r\n          id: todoId++,\r\n          content: action.payload.content,\r\n          isDone: action.payload.isDone,\r\n          editValue: action.payload.content,\r\n          isEdit: false\r\n        }]\r\n      }\r\n    }\r\n    case DELETE_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id)\r\n      }\r\n    }\r\n    case DELETE_TODO_ALL: {\r\n      return {\r\n        todos: []\r\n      }\r\n    }\r\n    case TOGGLE_ISDONE: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id !== action.payload.id) return todo\r\n          return {\r\n            ...todo,\r\n            isDone: !todo.isDone\r\n          }\r\n        })\r\n      }\r\n    }\r\n    case FILTER_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos,\r\n        filter: action.payload.filter\r\n      }\r\n    }\r\n    case EDIT_TODO: {\r\n      if (action.payload.e.target.nodeName === 'DIV') {\r\n        return {\r\n          ...state,\r\n          todos: state.todos.map((todo) => {\r\n            if (todo.id !== action.payload.id) return todo\r\n            return {\r\n              ...todo,\r\n              isEdit: !todo.isEdit\r\n            }\r\n          })\r\n        }\r\n      }\r\n      if (action.payload.e.target.nodeName === 'BUTTON' && action.payload.e.target.innerText === 'done') {\r\n        return {\r\n          ...state,\r\n          todos: state.todos.map((todo) => {\r\n            if (todo.id !== action.payload.id) return todo\r\n            return {\r\n              ...todo,\r\n              content: todo.editValue,\r\n              isEdit: !todo.isEdit\r\n            }\r\n          })\r\n        }\r\n      }\r\n      if (action.payload.e.target.nodeName === 'BUTTON' && action.payload.e.target.innerText === 'cancel') {\r\n        return {\r\n          ...state,\r\n          todos: state.todos.map((todo) => {\r\n            if (todo.id !== action.payload.id) return todo\r\n            return {\r\n              ...todo,\r\n              editValue: todo.content,\r\n              isEdit: !todo.isEdit\r\n            }\r\n          })\r\n        }\r\n      }\r\n      break\r\n    }\r\n    case EDIT_INPUT: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id !== action.payload.id) return todo\r\n          return {\r\n            ...todo,\r\n            editValue: action.payload.e.target.value\r\n          }\r\n        })\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\n\r\nexport default combineReducers({\r\n  todos\r\n})\r\n","import { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './redux/store'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}